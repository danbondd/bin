#!/usr/bin/env bash

function error {
	echo ERROR: "$1"
	exit 1
}

function usage {
	echo "Usage: $(basename $0) [OPTION]"
	echo "Control the brightness of intel_backlight."
	echo ""
	echo "OPTIONS"
	echo "  inc, increase    increase the brightness +20%"
	echo "  dec, decrease    decrease the brightness -20%"
	echo "  current          get current brightness percentage"
	exit 1
}

function increase {
	local new=$(($(current_brightness) + $(brightness_increment)))
	local max=$(max_brightness)

	if [[ ${new} -gt ${max} ]]; then
		set_brightness ${max}
		exit 0
	fi
	
	set_brightness ${new}
	exit 0
}

function decrease {
	local inc=$(brightness_increment)
	local new=$(($(current_brightness) - ${inc}))

	if [[ ${new} -lt ${inc} ]]; then
		set_brightness ${inc}
		exit 0
	fi

	set_brightness ${new}
	exit 0
}

function set_brightness {
	echo $1 > /sys/class/backlight/intel_backlight/brightness
	if [ $? -ne 0 ]; then
		error: "failed to set current brightness"
	fi
	exit 0
}

function current_brightness {
	local brightness=$(cat /sys/class/backlight/intel_backlight/brightness)
	if [ $? -ne 0 ]; then
		error: "failed to get current brightness"
	fi
	echo $brightness
}

function max_brightness {
	local max=$(cat /sys/class/backlight/intel_backlight/max_brightness)
	if [ $? -ne 0 ]; then
		error: "failed to get max_brightness"
	fi
	echo $max
}

function brightness_increment {
	echo $((($(max_brightness) / 10) * 2))
}

function brightness_percentage {
	local brightness=$(echo "$(current_brightness) / $(max_brightness) * 100" | bc -l)
	printf "%0.0f%%\n" $brightness
}

function check_root {
	if [[ $EUID > 0 ]]; then
		error "$(basename $0) must be ran as root"
	fi
}

command -v bc >/dev/null 2>&1 || error "bc not installed"

case "$1" in
	dec|decrease)
		check_root
		decrease
		;;
	inc|increase)
		check_root
		increase
		;;
	current)
		brightness_percentage
		;;
	*)
		usage
		;;
esac
